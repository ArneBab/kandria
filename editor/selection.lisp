(in-package #:org.shirakumo.fraf.kandria)

(defclass selection (tool)
  ((start-pos :initform NIL :accessor start-pos)
   (region :initform (cons (vec 0 0) (vec 0 0)) :accessor region)
   (cache :initform (cons NIL NIL) :accessor cache)))

(defmethod label ((tool selection)) "Selection")

(defmethod handle ((event mouse-press) (tool selection))
  (let ((pos (mouse-tile-pos (pos event))))
    (if (and (cdr (region tool))
             (v<= (car (region tool)) pos (cdr (region tool))))
        (setf (start-pos tool) pos)
        (setf (region tool) (cons pos NIL)
              (start-pos tool) NIL))))

(defmethod handle ((event mouse-release) (tool selection))
  (let ((layer (aref (layers (entity tool)) (layer (sidebar (editor tool)))))
        (pos (mouse-tile-pos (pos event)))
        (region (region tool)))
    (cond ((start-pos tool)
           (let ((diff (v- pos (start-pos tool)))
                 (cache (cache tool)))
             (setf (start-pos tool) NIL)
             (nv+ (car region) diff)
             (nv+ (cdr region) diff)
             (with-commit (tool)
               ((repeat-tile-region layer (v- (car region) diff) (v- (cdr region) diff) (create-tile-region (list 0 0 1 1)))
                (repeat-tile-region layer (car region) (cdr region) (cdr (cache tool))))
               ((setf (pixel-data layer) (car cache))))))
          (T
           (let ((sop (car region)))
             (setf (car region) (vmin sop pos))
             (setf (cdr region) (vmax sop pos))
             (setf (cache tool) (cons (copy-seq (pixel-data layer))
                                      (cache-tile-region layer (car region) (cdr region)))))))))

(defmethod handle ((event mouse-move) (tool selection))
  (let ((pos (mouse-tile-pos (pos event)))
        (layer (aref (layers (entity tool)) (layer (sidebar (editor tool)))))
        (region (region tool)))
    (flet ((draw-region (x- y- x+ y+)
             (replace-vertex-data (marker (editor tool))
                                  (list (vec3 x- y- 0) (vec3 x+ y- 0)
                                        (vec3 x+ y- 0) (vec3 x+ y+ 0)
                                        (vec3 x+ y+ 0) (vec3 x- y+ 0)
                                        (vec3 x- y+ 0) (vec3 x- y- 0)))))
      (cond ((start-pos tool)
             (let ((diff (v- pos (start-pos tool))))
               (setf (pixel-data layer) (copy-seq (car (cache tool))))
               (repeat-tile-region layer (car region) (cdr region) (create-tile-region (list 0 0 1 1)))
               (repeat-tile-region layer (v+ (car region) diff) (v+ (cdr region) diff) (cdr (cache tool)))
               (draw-region (+ (vx diff) (vx (car region))) (+ (vy diff) (vy (car region)))
                            (+ (vx diff) (vx (cdr region))) (+ (vy diff) (vy (cdr region))))))
            ((null (cdr region))
             (draw-region (vx (car region)) (vy (car region))
                          (vx pos) (vy pos)))))))
