# Kandria Level Design Doc
This document should serve as a reference for level design patterns and goals. If you're about to build a level, you should consult this document to ensure it is consistent with the overall design in Kandria.

## Overall goals
In general you should aim for the following goals, from most important to least important:

1. **Fun**
   Is the level fun to play? Does navigation feel good? If it's more frustrating than fun, redesign it.
2. **Replayability**
   If a player were to go through this level again, would it still be fun? Is there a way to beat it that's not a chore? Since this is an open-world game, players might need to or want to go through a level multiple times. Check if the level is still fun after figuring out its puzzle.
3. **Difficulty**
   Is the level hard to get through? Does the difficulty scaling make sense? Levels higher up should be easier to beat than ones lower down, and levels on the main path even more so.
6. **Composition**
   How does the level relate to the others? Does it make sense for it to be there, or would it fit better somewhere else? Does it communicate that it's a main path or a side path? It's important that the player understand how to navigate the world intuitively, so side content and main content, as well as the directionality should be apparent.
4. **Consistency**
   Does the level make sense as a part of the overall game world? Does it realistically seem like something that could exist? If the geometry is very contrived to serve the puzzle, consider redesigning it to be more probable.
5. **Speedrunning**
   Is there a somewhat hidden way to beat the level very quickly if you know the movement mechanics very well? Speedrunning is not a necessity, but it can be a good way to design levels to have multiple paths for all of the above reasons.

## Overworld design
The overworld in Kandria is divided up vertically into five sections:

1. **Surface**
   This area holds the camp as well as the ruined city parts. it is gated on both sides by impenetrable sandstorms. There are multiple areas that lead to region 1 sections.
2. **Region 1 (upper)**
   This is a mostly abandoned section of old buildings with a mix of caves. It is much wider than deep, and has lots of branching paths and tunnels that connect the different buildings. The focus here was on designing realistic buildings and tunnel layouts, with some extra content to the side. This, along with the surface, serves as the tutorial area and should thus be mostly safe to traverse. Enemies are very sparse and very weak.
3. **Region 1 (lower)**
   This is the first "real" area of the game, and is, similar to the upper part, more wide than deep. This time there are more paths to the side, but the overall layout is more linearly structured, with multiple "layers" of linear paths, which are tied together by the Semi Sisters settlement in the middle. Enemies on the far ends of the paths should be more frequent and more dangerous.
4. **Region 2**
   This region corresponds to the midpoint of the game, and has a more "box"-like layout compared to region 1. Many diagonally oriented wind shafts intersperse more horizontally oriented waterways, rivers, and lakes. Enemies should be much more frequent and more dangerous in this area, as raiders and monsters are frequent. Secrets and side areas should also be much more frequent.
5. **Region 3**
   This area is the final area in the game and should thus be the most challenging by far. The overall design should be mostly vertical, with diagonal elements connecting different shafts. Frequent enemy encounters are also encouraged.

Each of the sections should have multiple connection points to the one below and above it. Singular connection points may be used in the beginning, but in the very least at the point where the player must return to a previous section, multiple paths must exist.

## Detailed design
After the overall composition of chunks has been considered, the detailed design of each room must be considered. Generally each room should be one of the following types:

- **Puzzle**
  A room dedicated to a puzzle platforming challenge. These can be intricate designs with contrived layouts.
- **Arena**
  A room designed for a combat encounter. These should typically be quite flat, with little verticality to them, as combat depends on a mostly horizontal, wide open space.
- **Connector**
  A room that acts as a sort of hub to connect other rooms together. The primary design here lies in indicating to the player what types of rooms lie ahead of the various connecting spots.
- **Setpiece**
  A room primarily intended for story and world building reasons. The design should focus on the visual aspects, and ensure that it is coherent with the world itself. Typically these rooms are also connector rooms and house NPCs or lore items.

You should not cross over different room types, and instead split them up so each room can have a clear purpose.

### Player Moveset
The player has access to the following moves. Keep them in mind when designing levels:

- Stand
- Look up
- Look down
- Slow walk
- Run
- Fast run (requires uninterrupted run)
- Hop
- Jump
- Hard land
- Hard land roll
- Ground dash (will shoot off angled slopes)
- Dashjump (causes much faster dash)
- Aerial dash (locked to 8-axis)
- Crawl
- Wall slide
- Wall jump
- Climb hold
- Climb down
- Climb up (consumes stamina)
- Climb leap up (consumes stamina)
- Slide [TODO]
- Dodge (auto-triggered from dash)
- Light counter [TODO]
- Heavy counter [TODO]
- Light charge
- Heavy charge
- Light ground down [TODO]
- Heavy ground down [TODO]
- Light ground up
- Heavy ground up
- Light ground side 1
- Light ground side 2
- Light ground side 3
- Heavy ground side 1
- Heavy ground side 2
- Heavy ground side 3
- Light aerial down
- Heavy aerial down
- Light aerial side 1
- Light aerial side 2
- Light aerial side 3
- Heavy aerial side 1
- Heavy aerial side 2
- Heavy aerial side 3

### Platforming mechanics
This section will outline the available mechanical devices that can be used to construct a platforming section, as well as their behaviours and use-cases.

- **Spawn points**
  By default the player's position when entering a chunk will be set as the current spawn point. You can force a new spawn point by using a checkpoint. Occasionally it can be necessary to set a checkpoint in the middle of a room to ease a frustrating challenge.
- **Pits**
  If a chunk is not connected to another chunk below and has no platform to stand on, exiting below will cause the player to die and respawn. Since often times exiting below is expected to be safe, you must clearly indicate when it is not.
- **Ropes**
  Ropes can start out either extended or piled up. When piled, the player can kick the rope down to extend it, which will make it stay extended from there on out. The player can climb a rope without losing stamina, making it good for crossing long vertical chasms and gating off areas.
- **Spikes**
  Spikes are oriented death triggers. The player must hit the spike within an angle of 90Â° of the spike's direction in order to die. This especially means that the spike is pass-through if the player moves along the spike's direction. Useful to build one-way barriers and in general force certain jumping patterns.
- **Jump-through platforms**
  This element is rather simple and allows players to jump through from below, or drop down from above. Its primary use is to build "staircases" or provide players a bit of respite from a dangerous climb or jump section.
- **Falling platforms**
  These platforms will fall about half a second after the player stands on top of them. Climbing on the sides is fine, and will not trigger the fall. The platforms will restore to their initial position if the room is re-entered. While falling the player will be "glued" to the platform and keep standing on it, regardless of the platform's falling speed.
- **Crumbling platforms [TODO]**
  These platforms will crumble away half a second after the player stands on top of them or climbs onto them. They re-appear two seconds after disappearing. Primarily useful to add a timed element to platforming and force the player to move forward quickly.
- **Elevators**
  Elevators can cycle between two stops, and must be manually activated by the player. Once active, it will move in the current direction until a stopper block is encountered, or until the player activates the elevator again, inverting its direction. Elevators are primarily useful to connect long vertical sections together that would otherwise be a chore to climb manually.
- **Springs [TODO]**
  When colliding, the player will be launched in the direction of the spring. This also recharges the dash. Each spring has a constant amount of force to ensure the player can rely on their strength.
- **Springboards [TODO]**
  Unlike springs, springboards only bounce a small amount by default, and the player needs to press jump while on one to get a big upwards boost. They also only come in an upwards variant.
- **Lanterns [TODO]**
  When dashed into, lanterns recharge the dash and propel players forward and upwards a little bit. The lantern then breaks, until it restores two seconds later. This can be used to create chains of dashes to traverse longer pits.
- **Sandstorms**
  Sandstorms activate a simple full-screen effect that layers on top of everything and can be used to gate off the ends of the map.
- **Wind [TODO]**
  This area of effect will cause a constant force to be applied to the player while within it. You can vary the strength and direction of the wind, though be careful, as strong values can potentially make certain moves completely useless.
- **Conveyor belts [TODO]**
  When landing on or grabbing onto a conveyor belt, the player is stuck on the belt, and is then increasingly accelerated while on the belt. This can be useful for forcing the player into high momentum situations and crossing large gaps.
- **Water**
  Water provides vastly different physics. For one, gravity is greatly decreased and friction greatly increased. Jumping and dashing is very ineffective, but dashes are always immediately recharged allowing for infinite dashing.

### Puzzle design
[TODO]
### Combat arenas
[TODO]
### Boss arenas
[TODO]
