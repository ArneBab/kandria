# World File Format
This document specifies the file format used in Leaf to store a complete world. The format is defined by a combination of textual and ADL description. A more formal definition of ADL can be ound in the "adl"(link adl.mess) file.

## Container
The world file format is represented through a multitude of files in a hierarchical structure. This may be a directory, a zip archive, or anything similar that can store named binary blobs. In any case, the container may have a ``meta.lisp`` entry at its toplevel.

## Metadata
The ``meta.lisp`` entry must contain data as follows, encoded in standard s-expression format.

:: ADL
file: [ header, information ]

header: {
  identifier: symbol,
  version: symbol
}

information: {
  id: string,
  title: string,
  author: string,
  version: string,
  description: string
}
::

The ``identifier`` must always be the symbol ``world``. The ``version`` must be a symbol designating a subclass of ``version``.

## Payload
The contents of the packet otherwise are version dependent. The following subsections define the format for each version.

### ``v0``
The packet may contain an entry named ``setup.lisp``, the contents of which are raw Common Lisp source code. The file //should// contain a call to ``define-setup`` to define the setup entry function, which is called when the world is loaded. The ``setup.lisp`` file is primarily meant to load in quest data, but may contain other directives.

The packet must contain an entry named ``init/``, the contents of which are a "save-state"(link save-state.mess) describing the initial state of the world.

The packet must contain an entry named ``region/``, the contents of which are a "region"(link region-format.mess).
